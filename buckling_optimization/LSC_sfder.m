function [dndx,dndy,detj] = LSC_sfder(iele,nnpe,nqpt,dn,conn,crds)% LSC_sfder computes shape function derivatives detj = zeros(1,nqpt);dndx = zeros(nnpe,nqpt);dndy = zeros(nnpe,nqpt);dn_dksi(1:nqpt,1:nnpe) = dn(1:nqpt,1,1:nnpe);dn_deta(1:nqpt,1:nnpe) = dn(1:nqpt,2,1:nnpe);x = crds(:,1);y = crds(:,2);for i = 1:1:nqpt        tjac = zeros(2,2);             for j = 1:1:nnpe  	        j1 = conn(iele,j) ;  	          tjac(1,1) = tjac(1,1) + dn_dksi(i,j)*x(j1);                                   tjac(1,2) = tjac(1,2) + dn_deta(i,j)*x(j1);	                                   tjac(2,1) = tjac(2,1) + dn_dksi(i,j)*y(j1);                                  tjac(2,2) = tjac(2,2) + dn_deta(i,j)*y(j1);                          	      end                                                                                                                                     detj(i) = det(tjac);	          tjaci = inv(tjac);                                                             for  j = 1:1:nnpe	        dndx(i,j) = tjaci(1,1)*dn_dksi(i,j)+tjaci(2,1)*dn_deta(i,j);                    dndy(i,j) = tjaci(1,2)*dn_dksi(i,j)+tjaci(2,2)*dn_deta(i,j);           end        end 