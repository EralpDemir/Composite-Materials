function [N,dN,area] = FEM_nmat(k,e,crds,conn,eltyp,iele)
% This function shape function of a rectangular BFS element + Lagrangian
% element

% Resulting displacements [u v w]
if eltyp == 'TRI'
    
    x1 = crds(conn(iele,1),1);  y1 = crds(conn(iele,1),2);
    
    x2 = crds(conn(iele,2),1);  y2 = crds(conn(iele,2),2);
    
    x3 = crds(conn(iele,3),1);  y3 = crds(conn(iele,3),2);
    
    b1 = y2-y3;
    c1 = x3-x2;
    
    b2 = y3-y1;
    c2 = x1-x3;
    
    b3 = y1-y2;
    c3 = x2-x1;
    
    area = det([1 x1 y1;
        1 x2 y2;
        1 x3 y3])/2;
    
    t = 1-k-e;
    
    L1 = k*area;
    L2 = e*area;
    L3 = t*area;
    
    
    N = [ L1 0 L2 0 L3 0;
        0 L1 0 L2 0 L3];
    
    dN = [b1 b2 b3;
        c1 c2 c3]/(2*area);
    
elseif eltyp == 'HCT'
    
    
    
elseif eltyp == 'REC'
    
    % Dimensions of the element
    a = abs(crds(conn(iele,2),1) - crds(conn(iele,1),1))/2;
    b = abs(crds(conn(iele,4),2) - crds(conn(iele,1),2))/2;
    
    area = 4*a*b;
    
    N(1,1) = (1-k)*(1-e)/4;
    N(1,2) = 0;
    %
    N(1,3) = (1+k)*(1-e)/4;
    N(1,4) = 0;
    %
    N(1,5) = (1+k)*(1+e)/4;
    N(1,6) = 0;
    %
    N(1,7) = (1-k)*(1+e)/4;
    N(1,8) = 0;
    %
    N(2,1) = 0;
    N(2,2) = (1-k)*(1-e)/4;
    %
    N(2,3) = 0;
    N(2,4) = (1+k)*(1-e)/4;
    %
    N(2,5) = 0;
    N(2,6) = (1+k)*(1+e)/4;
    %
    N(2,7) = 0;
    N(2,8) = (1-k)*(1+e)/4;
    
    %%%%%%%%%%%%%%%%%%% derivatives
    dN(1,1) = (-1)*(1-e)/4/a;
    %
    dN(1,2)=(1)*(1-e)/4/a;
    %
    dN(1,3)=(1)*(1+e)/4/a;
    %
    dN(1,4)=(-1)*(1+e)/4/a;
    %
    dN(2,1)=(1-k)*(-1)/4/b;
    %
    dN(2,2)=(1+k)*(-1)/4/b;
    %
    dN(2,3)=(1+k)*(1)/4/b;
    %
    dN(2,4)=(1-k)*(1)/4/b;
    
elseif eltyp == 'BFS'
    
    % Dimensions of the element
    a = abs(crds(conn(iele,2),1)-crds(conn(iele,1),1))/2;
    b = abs(crds(conn(iele,4),2)-crds(conn(iele,1),2))/2;
    
    area = 4*a*b;
    
    N(1,1) = (e^3*k^3)/16 - (3*e^3*k)/16 + e^3/8 - (3*e*k^3)/16 + (9*e*k)/16 - (3*e)/8 + k^3/8 - (3*k)/8 + 1/4;
    N(1,2) = -a*(- (e^3*k^3)/16 + (e^3*k^2)/16 + (e^3*k)/16 - e^3/16 + (3*e*k^3)/16 - (3*e*k^2)/16 - (3*e*k)/16 + (3*e)/16 - k^3/8 + k^2/8 + k/8 - 1/8);
    N(1,3) = -b*(- (e^3*k^3)/16 + (3*e^3*k)/16 - e^3/8 + (e^2*k^3)/16 - (3*e^2*k)/16 + e^2/8 + (e*k^3)/16 - (3*e*k)/16 + e/8 - k^3/16 + (3*k)/16 - 1/8);
    N(1,4) = -a*b*(- (e^3*k^3)/16 + (e^3*k^2)/16 + (e^3*k)/16 - e^3/16 + (e^2*k^3)/16 - (e^2*k^2)/16 - (e^2*k)/16 + e^2/16 + (e*k^3)/16 - (e*k^2)/16 - (e*k)/16 + e/16 - k^3/16 + k^2/16 + k/16 - 1/16);
    N(1,5) = - (e^3*k^3)/16 + (3*e^3*k)/16 + e^3/8 + (3*e*k^3)/16 - (9*e*k)/16 - (3*e)/8 - k^3/8 + (3*k)/8 + 1/4;
    N(1,6) = a*((e^3*k^3)/16 + (e^3*k^2)/16 - (e^3*k)/16 - e^3/16 - (3*e*k^3)/16 - (3*e*k^2)/16 + (3*e*k)/16 + (3*e)/16 + k^3/8 + k^2/8 - k/8 - 1/8);
    N(1,7) = -b*((e^3*k^3)/16 - (3*e^3*k)/16 - e^3/8 - (e^2*k^3)/16 + (3*e^2*k)/16 + e^2/8 - (e*k^3)/16 + (3*e*k)/16 + e/8 + k^3/16 - (3*k)/16 - 1/8);
    N(1,8) = a*b*((e^3*k^3)/16 + (e^3*k^2)/16 - (e^3*k)/16 - e^3/16 - (e^2*k^3)/16 - (e^2*k^2)/16 + (e^2*k)/16 + e^2/16 - (e*k^3)/16 - (e*k^2)/16 + (e*k)/16 + e/16 + k^3/16 + k^2/16 - k/16 - 1/16);
    N(1,9) = (e^3*k^3)/16 - (3*e^3*k)/16 - e^3/8 - (3*e*k^3)/16 + (9*e*k)/16 + (3*e)/8 - k^3/8 + (3*k)/8 + 1/4;
    N(1,10) = -a*((e^3*k^3)/16 + (e^3*k^2)/16 - (e^3*k)/16 - e^3/16 - (3*e*k^3)/16 - (3*e*k^2)/16 + (3*e*k)/16 + (3*e)/16 - k^3/8 - k^2/8 + k/8 + 1/8);
    N(1,11) = -b*((e^3*k^3)/16 - (3*e^3*k)/16 - e^3/8 + (e^2*k^3)/16 - (3*e^2*k)/16 - e^2/8 - (e*k^3)/16 + (3*e*k)/16 + e/8 - k^3/16 + (3*k)/16 + 1/8);
    N(1,12) = a*b*((e^3*k^3)/16 + (e^3*k^2)/16 - (e^3*k)/16 - e^3/16 + (e^2*k^3)/16 + (e^2*k^2)/16 - (e^2*k)/16 - e^2/16 - (e*k^3)/16 - (e*k^2)/16 + (e*k)/16 + e/16 - k^3/16 - k^2/16 + k/16 + 1/16);
    N(1,13) = - (e^3*k^3)/16 + (3*e^3*k)/16 - e^3/8 + (3*e*k^3)/16 - (9*e*k)/16 + (3*e)/8 + k^3/8 - (3*k)/8 + 1/4;
    N(1,14) = a*(- (e^3*k^3)/16 + (e^3*k^2)/16 + (e^3*k)/16 - e^3/16 + (3*e*k^3)/16 - (3*e*k^2)/16 - (3*e*k)/16 + (3*e)/16 + k^3/8 - k^2/8 - k/8 + 1/8);
    N(1,15) = -b*(- (e^3*k^3)/16 + (3*e^3*k)/16 - e^3/8 - (e^2*k^3)/16 + (3*e^2*k)/16 - e^2/8 + (e*k^3)/16 - (3*e*k)/16 + e/8 + k^3/16 - (3*k)/16 + 1/8);
    N(1,16) = -a*b*(- (e^3*k^3)/16 + (e^3*k^2)/16 + (e^3*k)/16 - e^3/16 - (e^2*k^3)/16 + (e^2*k^2)/16 + (e^2*k)/16 - e^2/16 + (e*k^3)/16 - (e*k^2)/16 - (e*k)/16 + e/16 + k^3/16 - k^2/16 - k/16 + 1/16);
    
    dN=0;
    
end
