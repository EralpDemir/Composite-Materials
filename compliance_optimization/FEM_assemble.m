function [K,F,ndir] = FEM_assemble(iele,nnpe,conn,numind, dofst, ndir,ke,fe,K,F,dof,eltyp)% assembles elemental force and stiffness matrices into global counterpartsif eltyp == 'HCT'        % compute the element bending stiffness matrix and rhs    % global nodes for each element regarding connectivity    j1 = conn(iele,1); j2 = conn(iele,2); j3 = conn(iele,3);   % global element labels    j4 = conn(iele,4); j5 = conn(iele,5); j6 = conn(iele,6);        % position in the global matrix    e(1) = dofst(j1);    e(2) = dofst(j1)+1;    e(3) = dofst(j1)+2;    e(4) = dofst(j2);    e(5) = dofst(j2)+1;    e(6) = dofst(j2)+2;    e(7) = dofst(j3);    e(8) = dofst(j3)+1;    e(9) = dofst(j3)+2;    e(10)= dofst(j4);    e(11)= dofst(j5);    e(12)= dofst(j6);        % initialize the orientation index of the normal derivative    % at the mid-side nodes        for i=1:numind                fci = 1.0;                if i == 10            fci = ndir(j4);        elseif i == 11            fci = ndir(j5);        elseif i == 12            fci = ndir(j6);        end                for j = 1:numind                        fcj = 1.0;                        if j == 10                fcj = ndir(j4);            elseif j == 11                fcj = ndir(j5);            elseif j == 12                fcj = ndir(j6);            end                        K(e(i),e(j)) = K(e(i),e(j)) + fci*fcj*ke(i,j);                    end                F(e(i)) = F(e(i)) + fci*fe(i);            end        ndir(j4) = -1;    ndir(j5) = -1;    ndir(j6) = -1;    else        for  i = 1:1:nnpe                i_glonod_f = dof*conn(iele,i);                i_glonod_s = dof*conn(iele,i)-dof+1;                i_locnod_f = dof*i;                i_locnod_s = dof*i-dof+1;                F(i_glonod_s:1:i_glonod_f) = F(i_glonod_s:1:i_glonod_f) + fe(i_locnod_s:1:i_locnod_f);                for j = 1:1:nnpe                        j_glonod_f = dof*conn(iele,j);                        j_glonod_s = dof*conn(iele,j)-dof+1;                        j_locnod_f = dof*j;                        j_locnod_s = dof*j-dof+1;                                    K(i_glonod_s:1:i_glonod_f , j_glonod_s:1:j_glonod_f) = ...                K(i_glonod_s:1:i_glonod_f , j_glonod_s:1:j_glonod_f) + ...                ke(i_locnod_s:1:i_locnod_f , j_locnod_s:1:j_locnod_f);                    end            end        %ndir is not defined for non-hct element    ndir = 0;    end